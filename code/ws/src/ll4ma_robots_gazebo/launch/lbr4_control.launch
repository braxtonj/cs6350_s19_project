<?xml version="1.0"?>
<launch>
  <!-- ================================================================================= -->
  <!-- ARGUMENT OPTIONS                                                                  -->
  <!-- ~~~~~~~~~~~~~~~~                                                                  -->
  <!-- end_effector: End-effector to include [None, allegro, reflex, push_stick]         -->
  <!-- arm_name: Name of the arm, used for namespacing                                   -->
  <!-- controller: Type of controller to use [None, joint_pd]                            -->
  <!-- control_rate: Frequency at which robot control commands are published             -->
  <!--                                                                                   -->
  <!-- jnt_state_topic: Topic name for publishing current joint states                   -->
  <!-- jnt_des_topic: Topic name for publishing desired joint states                     -->
  <!-- task_des_topic: Topic name for publishing desired task space states               -->
  <!-- jnt_cmd_topic: Topic name for publishing low-level joint commands (torques)       -->
  <!-- robot_state_topic: Topic for publishing the full robot state                      -->
  <!-- ================================================================================= -->  
  <arg name="end_effector"      default="None"/>
  <arg name="arm_name"          default="lbr4"/>
  <arg name="controller"        default="joint_pd"/>
  <arg name="control_rate"      default="1000"/>  

  <arg name="jnt_state_topic"   default="/$(arg arm_name)/joint_states"/>
  <arg name="jnt_des_topic"     default="/$(arg arm_name)/joint_cmd"/>
  <arg name="task_des_topic"    default="/$(arg arm_name)/task_des_cmd"/>
  <arg name="jnt_cmd_topic"     default="/$(arg arm_name)/joint_torque_cmd"/>
  <arg name="robot_state_topic" default="robot_state"/>
  <!-- ================================================================================= -->  
  <!-- Set robot name based on end-effector (different based on actuated/non-actuated EE) -->
  <arg name="robot_name" if="$(eval end_effector in ['allegro', 'reflex'])"
       value="$(arg arm_name)_$(arg end_effector)"/>
  <arg name="robot_name" unless="$(eval end_effector in ['allegro', 'reflex'])"
       value="$(arg arm_name)"/>
  <!-- ================================================================================= -->  

  
  <!-- Controller manager for controllers in ll4ma_robot_control -->
  <node name="lbr4_ll4ma_control_manager" pkg="ll4ma_robots_gazebo" type="gazebo_control_manager"
	args="lbr4 $(arg robot_name)" respawn="false" output="screen"/>

  
  <!-- Load parameters to ROS parameter server -->
  <group ns="$(arg robot_name)">
    <param name="compensate_gravity" type="bool" value="true"/>
    <!-- Start in joint control since it will do controller switching -->
    <group if="$(eval controller in ['joint_pd', 'task_inv_dyn'])">
      <param name="control_type" type="str" value="joint_pd"/>
    </group>
    <group unless="$(eval controller in ['joint_pd', 'task_inv_dyn'])">
      <param name="control_type"       type="str" value="$(arg controller)"/>
    </group>
    <param name="jnt_state_topic"    type="str" value="$(arg jnt_state_topic)"/>
    <param name="jnt_des_topic"      type="str" value="$(arg jnt_des_topic)"/>
    <param name="task_des_topic"     type="str" value="$(arg task_des_topic)"/>
    <param name="jnt_cmd_topic"      type="str" value="$(arg jnt_cmd_topic)"/>
    <param name="robot_state_topic"  type="str" value="$(arg robot_state_topic)"/>
    <param name="rate"               type="int" value="$(arg control_rate)"/>
    <group if="$(eval end_effector == 'allegro')">
      <rosparam param="root_links">[lbr4_base_link]</rosparam>
      <rosparam param="tip_links">[palm_link]</rosparam>
    </group>
    <group if="$(eval end_effector == 'push_stick')">
      <rosparam param="root_links">[lbr4_base_link]</rosparam>
      <rosparam param="tip_links">[push_ball_center]</rosparam>
    </group>
    <group if="$(eval end_effector == 'reflex')">
      <rosparam param="root_links">[lbr4_base_link]</rosparam>
      <rosparam param="tip_links">[pad]</rosparam>
    </group>
    <group unless="$(eval end_effector == 'allegro')">
      <group unless="$(eval end_effector == 'push_stick')">
	<rosparam param="root_links">[lbr4_base_link]</rosparam>
	<rosparam param="tip_links">[lbr4_7_link]</rosparam>
      </group>
    </group>
    <rosparam file="$(find ll4ma_robots_gazebo)/config/control/lbr4/lbr4_effort_control.yaml"
  	      command="load"/>
    <!-- Load controller configurations -->
    <!-- TODO For now loading joint and task configs for control switching with the manager,
	 should probably only do this though if you're actually going to use both -->
    <group if="$(eval end_effector == 'reflex')">   
      <rosparam file="$(find ll4ma_robot_interface)/config/lbr4_reflex_joint_pd_control.yaml"
    		command="load"/>
    </group>
    <group unless="$(eval end_effector == 'reflex')">
      <rosparam file="$(find ll4ma_robot_interface)/config/lbr4_joint_pd_control.yaml"
    		command="load"/>
    </group>
    <rosparam file="$(find ll4ma_robot_interface)/config/lbr4_task_inv_dyn_control.yaml"
	      command="load"/>
  </group> <!-- END robot name namespace -->

  
  <!-- Load ROS controllers -->
  <node name="lbr4_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
  	output="screen" ns="$(arg robot_name)" args="joint_state_controller
  						     lbr4_j0_effort_controller
  						     lbr4_j1_effort_controller
  						     lbr4_j2_effort_controller
  						     lbr4_j3_effort_controller
  						     lbr4_j4_effort_controller
  						     lbr4_j5_effort_controller
  						     lbr4_j6_effort_controller"/>

  
  <!-- Split joint commands to publish to individual joint effort controllers -->
  <node name="lbr4_joint_wrapper" pkg="ll4ma_robots_gazebo" type="robot_joint_wrapper"
        respawn="false" output="screen">
    <param name="listen_prefix"     type="str" value="$(arg arm_name)"/>
    <param name="publish_prefix"    type="str" value="$(arg robot_name)"/>
    <param name="control_loop_rate" type="int" value="$(arg control_rate)"/>
    <param name="control_method"    type="str" value="e"/>
    <param name="jnt_cmd_topic"     type="str" value="$(arg jnt_cmd_topic)"/>
  </node>

  
  <!-- Move to a non-singular position to start if using task space control -->
  <group if="$(eval controller in ['task_inv_dyn'])">
    <node name="move_to_position" pkg="ll4ma_robot_control" type="control_switcher.py"
	  respawn="false" output="screen"/>
    <node if="$(eval end_effector == 'push_stick')" name="call_move_service" pkg="rosservice"
	  type="rosservice" args="call --wait /move_to_position [1.57,0.85,0.0,-1.10,0.0,1.19,0.0]"/>
    <node if="$(eval end_effector == 'reflex')" name="call_move_service" pkg="rosservice"
	  type="rosservice" args="call --wait /move_to_position [1.57,1.1,0.0,-1.57,0.0,-1.10,1.57]"/>
  </group>
  
</launch>
